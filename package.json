{
  "name": "ascii-tree-generator",
  "displayName": "Ascii Tree Generator",
  "description": "A vscode extension to generate ascii tree of directories or formatting selected text to tree string.",
  "version": "1.2.4",
  "engines": {
    "vscode": "^1.50.0"
  },
  "categories": [
    "Formatters",
    "Other"
  ],
  "publisher": "aprilandjan",
  "license": "MIT",
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#135200",
    "theme": "dark"
  },
  "author": "aprilandjan",
  "repository": {
    "type": "git",
    "url": "https://github.com/aprilandjan/vscode-ascii-tree-generator"
  },
  "activationEvents": [
    "onCommand:extension.asciiTreeGenerator",
    "onCommand:extension.asciiTreeGeneratorFromDirectory",
    "onCommand:extension.asciiTreeGeneratorFromText",
    "onCommand:extension.asciiTreeGeneratorRevertToText"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": [
      {
        "title": "Ascii Tree Generator Configuration",
        "properties": {
          "asciiTreeGenerator.enableCommentInFile": {
            "type": "boolean",
            "default": false,
            "description": "Enable comment in file by @file"
          },
          "asciiTreeGenerator.rootElement": {
            "type": "integer",
            "default": 46,
            "description": "For root elements (0-65535; Default: 46 '.')"
          },
          "asciiTreeGenerator.parentElement": {
            "type": "integer",
            "default": 9474,
            "description": "For vertical parent elements (0-65535; Default: 9474 '&#9474;')"
          },
          "asciiTreeGenerator.childElement": {
            "type": "integer",
            "default": 9500,
            "description": "For child elements (0-65535; Default: 9500 '&#9500;')"
          },
          "asciiTreeGenerator.lastElement": {
            "type": "integer",
            "default": 9492,
            "description": "For last elements of paths (0-65535; Default: 9492 '&#9492;')"
          },
          "asciiTreeGenerator.dashElement": {
            "type": "integer",
            "default": 9472,
            "description": "For horizontal dash elements (0-65535; Default: 9472 '&#9472;')"
          },
          "asciiTreeGenerator.blankElement": {
            "type": "integer",
            "default": 32,
            "description": "For blank / space elements (0-65535; Default: 32 ' ')"
          },
          "asciiTreeGenerator.directoryIgnore": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "The glob patterns of ignored path while generate tree string for directory"
          },
          "asciiTreeGenerator.directoryMaxDepth": {
            "type": "integer",
            "default": 0,
            "description": "The max walk-through depths while generate tree string for directory. Set to 0 means no limitation."
          }
        }
      }
    ],
    "commands": [
      {
        "command": "extension.asciiTreeGenerator",
        "title": "Generate Tree",
        "category": "Ascii Tree Generator"
      },
      {
        "command": "extension.asciiTreeGeneratorFromDirectory",
        "title": "Generate Tree String",
        "category": "Ascii Tree Generator"
      },
      {
        "command": "extension.asciiTreeGeneratorFromText",
        "title": "Format Text to Tree String",
        "category": "Ascii Tree Generator"
      },
      {
        "command": "extension.asciiTreeGeneratorRevertToText",
        "title": "Revert Tree String to Text",
        "category": "Ascii Tree Generator"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "extension.asciiTreeGenerator"
        }
      ],
      "explorer/context": [
        {
          "command": "extension.asciiTreeGeneratorFromDirectory",
          "group": "asciiTreeGenerator@1",
          "when": "explorerResourceIsFolder"
        }
      ],
      "editor/context": [
        {
          "command": "extension.asciiTreeGeneratorFromText",
          "group": "asciiTreeGenerator@1",
          "when": "editorHasSelection"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "test": "yarn run compile && node ./out/test/runTest.js",
    "lint": "eslint src",
    "prettify": "prettier --ignore-path .eslintignore '**/*.{js,jsx,ts,tsx,json,html,css,yml}' --write"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "8",
    "@types/node": "12",
    "@types/parse-gitignore": "^1.0.2",
    "@types/vscode": "^1.50.0",
    "@typescript-eslint/eslint-plugin": "^4.16.0",
    "@typescript-eslint/parser": "^4.16.0",
    "eslint": "^7.21.0",
    "mocha": "8",
    "prettier": "^2.3.1",
    "typescript": "4",
    "vscode-test": "^1.5.2"
  },
  "dependencies": {
    "glob": "^7.1.3",
    "parse-gitignore": "^2.0.0"
  }
}
